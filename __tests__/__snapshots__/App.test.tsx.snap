// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders correctly with dark theme 1`] = `
<View
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      gestureResponseDistance={
        {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      sheetAllowedDetents="large"
      sheetCornerRadius={-1}
      sheetExpandsWhenScrolledToEdge={true}
      sheetGrabberVisible={false}
      sheetLargestUndimmedDetent="all"
      stackPresentation="push"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backTitleVisible={true}
        backgroundColor="rgb(18, 18, 18)"
        color="rgb(10, 132, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={true}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="Home"
        titleColor="rgb(229, 229, 231)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          style={
            [
              {
                "flex": 1,
              },
              {
                "backgroundColor": "rgb(1, 1, 1)",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              {
                "flex": 1,
                "paddingBottom": 0,
                "paddingTop": 0,
              }
            }
          >
            <View>
              <TextInput
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Enter the city"
                style={
                  [
                    {
                      "borderColor": "rgb(39, 39, 41)",
                      "borderRadius": 8,
                      "borderWidth": 3,
                      "color": "rgb(229, 229, 231)",
                      "fontSize": 24,
                      "paddingHorizontal": 8,
                      "paddingVertical": 12,
                    },
                    {
                      "marginHorizontal": 16,
                    },
                  ]
                }
              />
            </View>
            <RCTScrollView
              ListHeaderComponent={<View />}
              data={[]}
              getItem={[Function]}
              getItemCount={[Function]}
              keyExtractor={[Function]}
              onContentSizeChange={[Function]}
              onLayout={[Function]}
              onMomentumScrollBegin={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={[]}
              style={
                {
                  "marginTop": 16,
                  "paddingHorizontal": 16,
                }
              }
              viewabilityConfigCallbackPairs={[]}
            >
              <View>
                <View
                  collapsable={false}
                  onLayout={[Function]}
                >
                  <View />
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</View>
`;

exports[`App renders correctly with light theme 1`] = `
<View
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      gestureResponseDistance={
        {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      sheetAllowedDetents="large"
      sheetCornerRadius={-1}
      sheetExpandsWhenScrolledToEdge={true}
      sheetGrabberVisible={false}
      sheetLargestUndimmedDetent="all"
      stackPresentation="push"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backTitleVisible={true}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={true}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="Home"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          style={
            [
              {
                "flex": 1,
              },
              {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              {
                "flex": 1,
                "paddingBottom": 0,
                "paddingTop": 0,
              }
            }
          >
            <View>
              <TextInput
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Enter the city"
                style={
                  [
                    {
                      "borderColor": "rgb(216, 216, 216)",
                      "borderRadius": 8,
                      "borderWidth": 3,
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 24,
                      "paddingHorizontal": 8,
                      "paddingVertical": 12,
                    },
                    {
                      "marginHorizontal": 16,
                    },
                  ]
                }
              />
            </View>
            <RCTScrollView
              ListHeaderComponent={<View />}
              data={[]}
              getItem={[Function]}
              getItemCount={[Function]}
              keyExtractor={[Function]}
              onContentSizeChange={[Function]}
              onLayout={[Function]}
              onMomentumScrollBegin={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={[]}
              style={
                {
                  "marginTop": 16,
                  "paddingHorizontal": 16,
                }
              }
              viewabilityConfigCallbackPairs={[]}
            >
              <View>
                <View
                  collapsable={false}
                  onLayout={[Function]}
                >
                  <View />
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</View>
`;
